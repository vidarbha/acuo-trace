<Prolog>
    <LastModification>
        <Transformer>
            <Program>Mapping Form</Program>
            <VersionNumber>3.6.5</VersionNumber>
            <BuildNumber>98</BuildNumber>
        </Transformer>
        <User>hicham</User>
        <Host>Win7-VM</Host>
        <Timestamp>30/10/2017 17:50:54</Timestamp>
        <Checksum>84e5aadc</Checksum>
    </LastModification>
</Prolog>
<MappingDefinition name="MarginCall-Fetch" group="Map:MS_ACUO" category="Acuo">
    <ActionStep>
        <RepeatAction repeatCounter="Counter1">
            <ActionStep>
                <FunctionCall>
                    <Property name="Input" type="nodespec">
                        <Value>
                            <NodeSpec>
                                <PathNodeSpec specType="FROM_DATA"
                                    contextName="Input" pathString="marginCall[Counter1]/localCounterpartyLabel"/>
                            </NodeSpec>
                        </Value>
                    </Property>
                    <Property name="Output" type="nodespec">
                        <Value>
                            <NodeSpec>
                                <PathNodeSpec specType="TO_DATA"
                                    contextName="Response" pathString="Call[Out1]/LocalCounterpartyLabel"/>
                            </NodeSpec>
                        </Value>
                    </Property>
                    <Copy></Copy>
                </FunctionCall>
            </ActionStep>
            <ActionStep>
                <FunctionCall>
                    <Property name="Input" type="nodespec">
                        <Value>
                            <NodeSpec>
                                <PathNodeSpec specType="FROM_DATA"
                                    contextName="Input" pathString="skip"/>
                            </NodeSpec>
                        </Value>
                    </Property>
                    <Property name="Output" type="nodespec">
                        <Value>
                            <NodeSpec>
                                <PathNodeSpec specType="TO_DATA"
                                    contextName="Response" pathString="Skip"/>
                            </NodeSpec>
                        </Value>
                    </Property>
                    <Copy></Copy>
                </FunctionCall>
            </ActionStep>
            <ActionStep>
                <FunctionCall>
                    <Property name="Input" type="nodespec">
                        <Value>
                            <NodeSpec>
                                <PathNodeSpec specType="FROM_DATA"
                                    contextName="Input" pathString="max"/>
                            </NodeSpec>
                        </Value>
                    </Property>
                    <Property name="Output" type="nodespec">
                        <Value>
                            <NodeSpec>
                                <PathNodeSpec specType="TO_DATA"
                                    contextName="Response" pathString="Max"/>
                            </NodeSpec>
                        </Value>
                    </Property>
                    <Copy></Copy>
                </FunctionCall>
            </ActionStep>
            <ActionStep>
                <FunctionCall>
                    <Property name="Input" type="nodespec">
                        <Value>
                            <NodeSpec>
                                <PathNodeSpec specType="FROM_DATA"
                                    contextName="Input" pathString="totalCount"/>
                            </NodeSpec>
                        </Value>
                    </Property>
                    <Property name="Output" type="nodespec">
                        <Value>
                            <NodeSpec>
                                <PathNodeSpec specType="TO_DATA"
                                    contextName="Response" pathString="TotalCount"/>
                            </NodeSpec>
                        </Value>
                    </Property>
                    <Copy></Copy>
                </FunctionCall>
            </ActionStep>
            <ActionStep>
                <IfAction>
                    <Condition>
                        <Comparison>
                            <FirstTerm>
                                <PathNodeSpec specType="FROM_DATA"
                                    contextName="Input" pathString="marginCall[Counter1]/businessState"/>
                            </FirstTerm>
                            <Operator>EQ</Operator>
                            <SecondTerm>
                                <Literal>Received</Literal>
                            </SecondTerm>
                        </Comparison>
                    </Condition>
                    <ThenAction>
                        <ActionStep>
                            <FunctionCall>
                                <Property name="marginCall" type="nodespec">
                                    <Value>
                                    <NodeSpec>
                                    <PathNodeSpec
                                    specType="FROM_DATA"
                                    contextName="Input" pathString="marginCall[Counter1]"/>
                                    </NodeSpec>
                                    </Value>
                                </Property>
                                <Property name="Output" type="nodespec">
                                    <Value>
                                    <NodeSpec>
                                    <PathNodeSpec
                                    specType="TO_DATA"
                                    contextName="Response" pathString="Call[Out1]"/>
                                    </NodeSpec>
                                    </Value>
                                </Property>
                                <MappingDefinitionInvocation>MarginCall-Received</MappingDefinitionInvocation>
                            </FunctionCall>
                        </ActionStep>
                    </ThenAction>
                </IfAction>
            </ActionStep>
            <ActionStep>
                <IfAction>
                    <Condition>
                        <Comparison>
                            <FirstTerm>
                                <PathNodeSpec specType="FROM_DATA"
                                    contextName="Input" pathString="marginCall[Counter1]/businessState"/>
                            </FirstTerm>
                            <Operator>EQ</Operator>
                            <SecondTerm>
                                <Literal>Agreed</Literal>
                            </SecondTerm>
                        </Comparison>
                    </Condition>
                    <ThenAction>
                        <ActionStep>
                            <FunctionCall>
                                <Property name="Input" type="nodespec">
                                    <Value>
                                    <NodeSpec>
                                    <PathNodeSpec
                                    specType="FROM_DATA"
                                    contextName="Input" pathString="marginCall[Counter1]"/>
                                    </NodeSpec>
                                    </Value>
                                </Property>
                                <Property name="Output" type="nodespec">
                                    <Value>
                                    <NodeSpec>
                                    <PathNodeSpec
                                    specType="TO_DATA"
                                    contextName="Response" pathString="Call[Out1]"/>
                                    </NodeSpec>
                                    </Value>
                                </Property>
                                <MappingDefinitionInvocation>MarginCall-Agreed</MappingDefinitionInvocation>
                            </FunctionCall>
                        </ActionStep>
                    </ThenAction>
                </IfAction>
            </ActionStep>
            <ActionStep>
                <IfAction>
                    <Condition>
                        <Comparison>
                            <FirstTerm>
                                <PathNodeSpec specType="FROM_DATA"
                                    contextName="Input" pathString="marginCall[Counter1]/businessState"/>
                            </FirstTerm>
                            <Operator>EQ</Operator>
                            <SecondTerm>
                                <Literal>Disputed</Literal>
                            </SecondTerm>
                        </Comparison>
                    </Condition>
                    <ThenAction>
                        <ActionStep>
                            <FunctionCall>
                                <Property name="Input" type="nodespec">
                                    <Value>
                                    <NodeSpec>
                                    <PathNodeSpec
                                    specType="FROM_DATA"
                                    contextName="Input" pathString="marginCall[Counter1]"/>
                                    </NodeSpec>
                                    </Value>
                                </Property>
                                <Property name="Output" type="nodespec">
                                    <Value>
                                    <NodeSpec>
                                    <PathNodeSpec
                                    specType="TO_DATA"
                                    contextName="Response" pathString="Call[Out1]"/>
                                    </NodeSpec>
                                    </Value>
                                </Property>
                                <MappingDefinitionInvocation>MarginCall-Disputed</MappingDefinitionInvocation>
                            </FunctionCall>
                        </ActionStep>
                    </ThenAction>
                </IfAction>
            </ActionStep>
            <ActionStep>
                <IfAction>
                    <Condition>
                        <CompoundCondition operator="OR">
                            <Condition>
                                <Comparison>
                                    <FirstTerm>
                                    <PathNodeSpec
                                    specType="FROM_DATA"
                                    contextName="Input" pathString="marginCall[Counter1]/businessState"/>
                                    </FirstTerm>
                                    <Operator>EQ</Operator>
                                    <SecondTerm>
                                    <Literal>Partial Agreed</Literal>
                                    </SecondTerm>
                                </Comparison>
                            </Condition>
                            <Condition>
                                <Comparison>
                                    <FirstTerm>
                                    <PathNodeSpec
                                    specType="FROM_DATA"
                                    contextName="Input" pathString="marginCall[Counter1]/businessState"/>
                                    </FirstTerm>
                                    <Operator>EQ</Operator>
                                    <SecondTerm>
                                    <Literal>Partial Disputed</Literal>
                                    </SecondTerm>
                                </Comparison>
                            </Condition>
                        </CompoundCondition>
                    </Condition>
                    <ThenAction>
                        <ActionStep>
                            <FunctionCall>
                                <Property name="Input" type="nodespec">
                                    <Value>
                                    <NodeSpec>
                                    <PathNodeSpec
                                    specType="FROM_DATA"
                                    contextName="Input" pathString="marginCall[Counter1]"/>
                                    </NodeSpec>
                                    </Value>
                                </Property>
                                <Property name="Output" type="nodespec">
                                    <Value>
                                    <NodeSpec>
                                    <PathNodeSpec
                                    specType="TO_DATA"
                                    contextName="Response" pathString="Call[Out1]"/>
                                    </NodeSpec>
                                    </Value>
                                </Property>
                                <MappingDefinitionInvocation>MarginCall-PartialDisputed</MappingDefinitionInvocation>
                            </FunctionCall>
                        </ActionStep>
                    </ThenAction>
                </IfAction>
            </ActionStep>
            <ActionStep>
                <IfAction>
                    <Condition>
                        <Comparison>
                            <FirstTerm>
                                <PathNodeSpec specType="FROM_DATA"
                                    contextName="Input" pathString="marginCall[Counter1]/businessState"/>
                            </FirstTerm>
                            <Operator>EQ</Operator>
                            <SecondTerm>
                                <Literal>Pledged</Literal>
                            </SecondTerm>
                        </Comparison>
                    </Condition>
                    <ThenAction>
                        <ActionStep>
                            <FunctionCall>
                                <Property name="Input" type="nodespec">
                                    <Value>
                                    <NodeSpec>
                                    <PathNodeSpec
                                    specType="FROM_DATA"
                                    contextName="Input" pathString="marginCall[Counter1]"/>
                                    </NodeSpec>
                                    </Value>
                                </Property>
                                <Property name="Output" type="nodespec">
                                    <Value>
                                    <NodeSpec>
                                    <PathNodeSpec
                                    specType="TO_DATA"
                                    contextName="Response" pathString="Call[Out1]"/>
                                    </NodeSpec>
                                    </Value>
                                </Property>
                                <MappingDefinitionInvocation>MarginCall-Pledged</MappingDefinitionInvocation>
                            </FunctionCall>
                        </ActionStep>
                    </ThenAction>
                </IfAction>
            </ActionStep>
            <ActionStep>
                <IfAction>
                    <Condition>
                        <Comparison>
                            <FirstTerm>
                                <PathNodeSpec specType="FROM_DATA"
                                    contextName="Input" pathString="marginCall[Counter1]/businessState"/>
                            </FirstTerm>
                            <Operator>EQ</Operator>
                            <SecondTerm>
                                <Literal>Pledge Accepted</Literal>
                            </SecondTerm>
                        </Comparison>
                    </Condition>
                    <ThenAction>
                        <ActionStep>
                            <FunctionCall>
                                <Property name="Input" type="nodespec">
                                    <Value>
                                    <NodeSpec>
                                    <PathNodeSpec
                                    specType="FROM_DATA"
                                    contextName="Input" pathString="marginCall[Counter1]"/>
                                    </NodeSpec>
                                    </Value>
                                </Property>
                                <Property name="Output" type="nodespec">
                                    <Value>
                                    <NodeSpec>
                                    <PathNodeSpec
                                    specType="TO_DATA"
                                    contextName="Response" pathString="Call[Out1]"/>
                                    </NodeSpec>
                                    </Value>
                                </Property>
                                <MappingDefinitionInvocation>MarginCall-PledgeAccepted</MappingDefinitionInvocation>
                            </FunctionCall>
                        </ActionStep>
                    </ThenAction>
                </IfAction>
            </ActionStep>
            <ActionStep>
                <IfAction>
                    <Condition>
                        <Comparison>
                            <FirstTerm>
                                <PathNodeSpec specType="FROM_DATA"
                                    contextName="Input" pathString="marginCall[Counter1]/businessState"/>
                            </FirstTerm>
                            <Operator>EQ</Operator>
                            <SecondTerm>
                                <Literal>Cancelled</Literal>
                            </SecondTerm>
                        </Comparison>
                    </Condition>
                    <ThenAction>
                        <ActionStep>
                            <FunctionCall>
                                <Property name="Input" type="nodespec">
                                    <Value>
                                    <NodeSpec>
                                    <PathNodeSpec
                                    specType="FROM_DATA"
                                    contextName="Input" pathString="marginCall[Counter1]"/>
                                    </NodeSpec>
                                    </Value>
                                </Property>
                                <Property name="Output" type="nodespec">
                                    <Value>
                                    <NodeSpec>
                                    <PathNodeSpec
                                    specType="TO_DATA"
                                    contextName="Response" pathString="Call[Out1]"/>
                                    </NodeSpec>
                                    </Value>
                                </Property>
                                <MappingDefinitionInvocation>MarginCall-Cancelled</MappingDefinitionInvocation>
                            </FunctionCall>
                        </ActionStep>
                    </ThenAction>
                </IfAction>
            </ActionStep>
            <ScopeB specType="TO_DATA" contextName="Response"
                pathString="Call[]" outputPosnSpecifier="Out1"/>
            <RepeatLimit>
                <PathNodeSpec specType="FROM_DATA" contextName="Input" pathString="marginCall[#]"/>
            </RepeatLimit>
            <ScopeA specType="FROM_DATA" contextName="Input" pathString="marginCall[]"/>
        </RepeatAction>
    </ActionStep>
    <InputDefinition name="Input" optional="false" repeating="false">
        <Component>marginCalls</Component>
    </InputDefinition>
    <OutputDefinition name="Response" optional="false" repeating="false">
        <Type>marginsphere:Response</Type>
    </OutputDefinition>
    <CalledAsSubmappingActionExceptionRules>
        <ActionExceptionRule>
            <Scenario>SOURCE_ABSENT</Scenario>
            <UseDefaultValue>false</UseDefaultValue>
            <Action>SMART_SKIP</Action>
        </ActionExceptionRule>
    </CalledAsSubmappingActionExceptionRules>
</MappingDefinition>
