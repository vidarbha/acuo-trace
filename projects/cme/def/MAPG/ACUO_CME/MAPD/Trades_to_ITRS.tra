<Prolog>
    <LastModification>
        <Transformer>
            <Program>Mapping Form</Program>
            <VersionNumber>3.6.5</VersionNumber>
            <BuildNumber>98</BuildNumber>
        </Transformer>
        <User>hicham</User>
        <Host>Win7-VM</Host>
        <Timestamp>13/11/2017 16:29:33</Timestamp>
        <Checksum>6aa84ec5</Checksum>
    </LastModification>
</Prolog>
<MappingDefinition name="Trades_to_ITRS" group="Map:ACUO_CME">
    <ActionStep>
        <IfAction>
            <Condition>
                <Comparison>
                    <FirstTerm>
                        <PathNodeSpec specType="FROM_DATA"
                            contextName="Envelop" pathString="Type"/>
                    </FirstTerm>
                    <Operator>EQ</Operator>
                    <SecondTerm>
                        <Literal>FRA</Literal>
                    </SecondTerm>
                </Comparison>
            </Condition>
            <ThenAction>
                <ActionStep>
                    <FunctionCall>
                        <Property name="MappingName" type="nodespec">
                            <Value>
                                <NodeSpec>
                                    <Literal>FRA_to_Body</Literal>
                                </NodeSpec>
                            </Value>
                        </Property>
                        <Property name="Input1" type="nodespec">
                            <Value>
                                <NodeSpec>
                                    <PathNodeSpec specType="FROM_DATA"
                                    contextName="Envelop" pathString="FRATrade"/>
                                </NodeSpec>
                            </Value>
                        </Property>
                        <Property name="Output1" type="nodespec">
                            <Value>
                                <NodeSpec>
                                    <PathNodeSpec specType="TO_DATA"
                                    contextName="Output" pathString="."/>
                                </NodeSpec>
                            </Value>
                        </Property>
                        <Property name="Input2" type="nodespec">
                            <Value>
                                <NodeSpec>
                                    <PathNodeSpec specType="FROM_DATA"
                                    contextName="Context" pathString="."/>
                                </NodeSpec>
                            </Value>
                        </Property>
                        <Mapper>InvokeMapping</Mapper>
                    </FunctionCall>
                </ActionStep>
            </ThenAction>
        </IfAction>
    </ActionStep>
    <ActionStep>
        <IfAction>
            <Condition>
                <Comparison>
                    <FirstTerm>
                        <PathNodeSpec specType="FROM_DATA"
                            contextName="Envelop" pathString="Type"/>
                    </FirstTerm>
                    <Operator>EQ</Operator>
                    <SecondTerm>
                        <Literal>SWAP</Literal>
                    </SecondTerm>
                </Comparison>
            </Condition>
            <ThenAction>
                <ActionStep>
                    <FunctionCall>
                        <Property name="MappingName" type="nodespec">
                            <Value>
                                <NodeSpec>
                                    <Literal>Swap_to_Body</Literal>
                                </NodeSpec>
                            </Value>
                        </Property>
                        <Property name="Input1" type="nodespec">
                            <Value>
                                <NodeSpec>
                                    <PathNodeSpec specType="FROM_DATA"
                                    contextName="Envelop" pathString="SwapTrade"/>
                                </NodeSpec>
                            </Value>
                        </Property>
                        <Property name="Output1" type="nodespec">
                            <Value>
                                <NodeSpec>
                                    <PathNodeSpec specType="TO_DATA"
                                    contextName="Output" pathString="."/>
                                </NodeSpec>
                            </Value>
                        </Property>
                        <Property name="Input2" type="nodespec">
                            <Value>
                                <NodeSpec>
                                    <PathNodeSpec specType="FROM_DATA"
                                    contextName="Context" pathString="."/>
                                </NodeSpec>
                            </Value>
                        </Property>
                        <Mapper>InvokeMapping</Mapper>
                    </FunctionCall>
                </ActionStep>
            </ThenAction>
        </IfAction>
    </ActionStep>
    <ActionStep>
        <IfAction>
            <Condition>
                <Comparison>
                    <FirstTerm>
                        <PathNodeSpec specType="FROM_DATA"
                            contextName="Envelop" pathString="Type"/>
                    </FirstTerm>
                    <Operator>EQ</Operator>
                    <SecondTerm>
                        <Literal>FXSWAP</Literal>
                    </SecondTerm>
                </Comparison>
            </Condition>
            <ThenAction>
                <ActionStep>
                    <FunctionCall>
                        <Property name="MappingName" type="nodespec">
                            <Value>
                                <NodeSpec>
                                    <Literal>FXSwap_to_Body</Literal>
                                </NodeSpec>
                            </Value>
                        </Property>
                        <Property name="Input1" type="nodespec">
                            <Value>
                                <NodeSpec>
                                    <PathNodeSpec specType="FROM_DATA"
                                    contextName="Envelop" pathString="FXSwapTrade"/>
                                </NodeSpec>
                            </Value>
                        </Property>
                        <Property name="Output1" type="nodespec">
                            <Value>
                                <NodeSpec>
                                    <PathNodeSpec specType="TO_DATA"
                                    contextName="Output" pathString="."/>
                                </NodeSpec>
                            </Value>
                        </Property>
                        <Property name="Input2" type="nodespec">
                            <Value>
                                <NodeSpec>
                                    <PathNodeSpec specType="FROM_DATA"
                                    contextName="Context" pathString="."/>
                                </NodeSpec>
                            </Value>
                        </Property>
                        <Mapper>InvokeMapping</Mapper>
                    </FunctionCall>
                </ActionStep>
            </ThenAction>
        </IfAction>
    </ActionStep>
    <InputDefinition name="Envelop" optional="false" repeating="false">
        <Type>inputs:Envelop</Type>
    </InputDefinition>
    <InputDefinition name="Context" optional="false" repeating="false">
        <Type>com.acuo.collateral.transform:TransformerContext</Type>
    </InputDefinition>
    <OutputDefinition name="Output" optional="false" repeating="false">
        <Component>Body</Component>
    </OutputDefinition>
    <CalledAsSubmappingActionExceptionRules>
        <ActionExceptionRule>
            <Scenario>SOURCE_ABSENT</Scenario>
            <UseDefaultValue>false</UseDefaultValue>
            <Action>SMART_SKIP</Action>
        </ActionExceptionRule>
    </CalledAsSubmappingActionExceptionRules>
</MappingDefinition>
