<Prolog>
    <LastModification>
        <Transformer>
            <Program>Mapping Form</Program>
            <VersionNumber>3.6.5</VersionNumber>
            <BuildNumber>98</BuildNumber>
        </Transformer>
        <User>hicham</User>
        <Host>Win7-VM</Host>
        <Timestamp>12/09/2017 20:06:42</Timestamp>
        <Checksum>3d8ff289</Checksum>
    </LastModification>
</Prolog>
<MappingDefinition name="Trades_to_ITRS" group="Map:ACUO_CME">
    <ActionStep>
        <FunctionCall>
            <Property name="Input" type="nodespec">
                <Value>
                    <NodeSpec>
                        <ValueGeneratorReference>CmeHeader</ValueGeneratorReference>
                    </NodeSpec>
                </Value>
            </Property>
            <Property name="Output" type="nodespec">
                <Value>
                    <NodeSpec>
                        <PathNodeSpec specType="TO_DATA"
                            contextName="Output" pathString="Header"/>
                    </NodeSpec>
                </Value>
            </Property>
            <Copy></Copy>
        </FunctionCall>
    </ActionStep>
    <ActionStep>
        <RepeatAction repeatCounter="Counter1">
            <ActionStep>
                <IfAction>
                    <Condition>
                        <Comparison>
                            <FirstTerm>
                                <PathNodeSpec specType="FROM_DATA"
                                    contextName="Input" pathString="Envelop[Counter1]/Type"/>
                            </FirstTerm>
                            <Operator>EQ</Operator>
                            <SecondTerm>
                                <Literal>FRA</Literal>
                            </SecondTerm>
                        </Comparison>
                    </Condition>
                    <ThenAction>
                        <ActionStep>
                            <FunctionCall>
                                <Property name="MappingName" type="nodespec">
                                    <Value>
                                    <NodeSpec>
                                    <Literal>FRA_to_Body</Literal>
                                    </NodeSpec>
                                    </Value>
                                </Property>
                                <Property name="Input1" type="nodespec">
                                    <Value>
                                    <NodeSpec>
                                    <PathNodeSpec
                                    specType="FROM_DATA"
                                    contextName="Input" pathString="Envelop[Counter1]/FRATrade"/>
                                    </NodeSpec>
                                    </Value>
                                </Property>
                                <Property name="Output1" type="nodespec">
                                    <Value>
                                    <NodeSpec>
                                    <PathNodeSpec
                                    specType="TO_DATA"
                                    contextName="Output" pathString="Body[Out1]"/>
                                    </NodeSpec>
                                    </Value>
                                </Property>
                                <Property name="Input2" type="nodespec">
                                    <Value>
                                    <NodeSpec>
                                    <PathNodeSpec
                                    specType="FROM_DATA"
                                    contextName="Input" pathString="Context"/>
                                    </NodeSpec>
                                    </Value>
                                </Property>
                                <Mapper>InvokeMapping</Mapper>
                            </FunctionCall>
                        </ActionStep>
                    </ThenAction>
                </IfAction>
            </ActionStep>
            <ActionStep>
                <IfAction>
                    <Condition>
                        <Comparison>
                            <FirstTerm>
                                <PathNodeSpec specType="FROM_DATA"
                                    contextName="Input" pathString="Envelop[Counter1]/Type"/>
                            </FirstTerm>
                            <Operator>EQ</Operator>
                            <SecondTerm>
                                <Literal>SWAP</Literal>
                            </SecondTerm>
                        </Comparison>
                    </Condition>
                    <ThenAction>
                        <ActionStep>
                            <FunctionCall>
                                <Property name="MappingName" type="nodespec">
                                    <Value>
                                    <NodeSpec>
                                    <Literal>SWAP_to_Body</Literal>
                                    </NodeSpec>
                                    </Value>
                                </Property>
                                <Property name="Input1" type="nodespec">
                                    <Value>
                                    <NodeSpec>
                                    <PathNodeSpec
                                    specType="FROM_DATA"
                                    contextName="Input" pathString="Envelop[Counter1]/SwapTrade"/>
                                    </NodeSpec>
                                    </Value>
                                </Property>
                                <Property name="Output1" type="nodespec">
                                    <Value>
                                    <NodeSpec>
                                    <PathNodeSpec
                                    specType="TO_DATA"
                                    contextName="Output" pathString="Body[Out1]"/>
                                    </NodeSpec>
                                    </Value>
                                </Property>
                                <Property name="Input2" type="nodespec">
                                    <Value>
                                    <NodeSpec>
                                    <PathNodeSpec
                                    specType="FROM_DATA"
                                    contextName="Input" pathString="Context"/>
                                    </NodeSpec>
                                    </Value>
                                </Property>
                                <Mapper>InvokeMapping</Mapper>
                            </FunctionCall>
                        </ActionStep>
                    </ThenAction>
                </IfAction>
            </ActionStep>
            <ActionStep>
                <IfAction>
                    <Condition>
                        <Comparison>
                            <FirstTerm>
                                <PathNodeSpec specType="FROM_DATA"
                                    contextName="Input" pathString="Envelop[Counter1]/Type"/>
                            </FirstTerm>
                            <Operator>EQ</Operator>
                            <SecondTerm>
                                <Literal>FXSWAP</Literal>
                            </SecondTerm>
                        </Comparison>
                    </Condition>
                    <ThenAction>
                        <ActionStep>
                            <FunctionCall>
                                <Property name="MappingName" type="nodespec">
                                    <Value>
                                    <NodeSpec>
                                    <Literal>FXSwap_to_Body</Literal>
                                    </NodeSpec>
                                    </Value>
                                </Property>
                                <Property name="Input1" type="nodespec">
                                    <Value>
                                    <NodeSpec>
                                    <PathNodeSpec
                                    specType="FROM_DATA"
                                    contextName="Input" pathString="Envelop[Counter1]/FXSwapTrade"/>
                                    </NodeSpec>
                                    </Value>
                                </Property>
                                <Property name="Output1" type="nodespec">
                                    <Value>
                                    <NodeSpec>
                                    <PathNodeSpec
                                    specType="TO_DATA"
                                    contextName="Output" pathString="Body[Out1]"/>
                                    </NodeSpec>
                                    </Value>
                                </Property>
                                <Property name="Input2" type="nodespec">
                                    <Value>
                                    <NodeSpec>
                                    <PathNodeSpec
                                    specType="FROM_DATA"
                                    contextName="Input" pathString="Context"/>
                                    </NodeSpec>
                                    </Value>
                                </Property>
                                <Mapper>InvokeMapping</Mapper>
                            </FunctionCall>
                        </ActionStep>
                    </ThenAction>
                </IfAction>
            </ActionStep>
            <ScopeB specType="TO_DATA" contextName="Output"
                pathString="Body[]" outputPosnSpecifier="Out1"/>
            <RepeatLimit>
                <PathNodeSpec specType="FROM_DATA" contextName="Input" pathString="Envelop[#]"/>
            </RepeatLimit>
            <ScopeA specType="FROM_DATA" contextName="Input" pathString="Envelop[]"/>
        </RepeatAction>
    </ActionStep>
    <InputDefinition name="Input" optional="false" repeating="false">
        <Type>inputs:ClarusInput</Type>
    </InputDefinition>
    <OutputDefinition name="Output" optional="false" repeating="false">
        <Message>ITRS</Message>
    </OutputDefinition>
    <CalledAsSubmappingActionExceptionRules>
        <ActionExceptionRule>
            <Scenario>SOURCE_ABSENT</Scenario>
            <UseDefaultValue>false</UseDefaultValue>
            <Action>SMART_SKIP</Action>
        </ActionExceptionRule>
    </CalledAsSubmappingActionExceptionRules>
</MappingDefinition>
