apply from: "https://raw.githubusercontent.com/anaxo-io/gradle-plugins/master/root/buildscript.gradle"
apply from: "https://raw.githubusercontent.com/anaxo-io/gradle-plugins/master/root/gradle-wrapper.gradle"
apply from: "https://raw.githubusercontent.com/anaxo-io/gradle-plugins/master/root/profiles-config.gradle"
apply from: "https://raw.githubusercontent.com/anaxo-io/gradle-plugins/master/root/deployment.gradle"
apply from: "https://raw.githubusercontent.com/anaxo-io/gradle-plugins/master/root/test-reports.gradle"

apply from: "https://raw.githubusercontent.com/anaxo-io/gradle-plugins/master/java/java-plugins.gradle"
apply from: "https://raw.githubusercontent.com/anaxo-io/gradle-plugins/master/java/dependencies.gradle"
apply from: "https://raw.githubusercontent.com/anaxo-io/gradle-plugins/master/java/integration-test.gradle"
apply from: "https://raw.githubusercontent.com/anaxo-io/gradle-plugins/master/java/sonarqube.gradle"

group = 'com.acuo.collateral'

ext {
    versions += [
        common      : '0.13.1',
        transformer : "${project.version}",
        runtime     : '3.6.5',
        design      : '3.6.5',
        currencylib : '1.0.7',
        swiftlib    : '1.5'
    ]
}

dependencies {
    compile (
        "com.acuo.collateral:transformer-valuations:${versions.transformer}",
        "com.acuo.collateral:transformer-margin:${versions.transformer}",
        "com.acuo.collateral:transformer-assets:${versions.transformer}",
        "com.acuo.collateral:acuo-common:${versions.common}",
        "com.tracegroup.transformer:transformer-runtime-complete:${versions.runtime}",
        "com.tracegroup.transformer:transformer-designtime:${versions.design}",
        "com.tracegroup.transformer:currencylib:${versions.currencylib}",
        "com.swift:swift2016lib:${versions.swiftlib}",
        "com.opengamma.strata:strata-basics:1.0.0"
    )
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile (
        "com.acuo.collateral:acuo-common:${versions.common}:tests"
    )
}

task fatJar(type: Jar, dependsOn: ":libs:publish") {
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',
                'Implementation-Version': version,
                'Main-Class': 'com.mkyong.DateUtils'
    }
    baseName = project.name + '-all'
    version = ''
    classifier = ''
    zip64 true
    excludes = ["META-INF/*.SF", "META-INF/*.DSA", "META-INF/*.RSA"]
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    with jar
}

gradle.projectsEvaluated {
  releaseCheck.dependsOn(":libs:publish")
  compileJava.dependsOn(":libs:publish")
  tasks.release.dependsOn tasks.build
}
